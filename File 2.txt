MATHEWS  OPALA@DESKTOP-P6TLJE2 MINGW64 ~/Desktop/IST Diploma/Practice Git
$ git init
Initialized empty Git repository in C:/Users/MATHEWS  OPALA/Desktop/IST Diploma/Practice Git/.git/

MATHEWS  OPALA@DESKTOP-P6TLJE2 MINGW64 ~/Desktop/IST Diploma/Practice Git (master)
$ git add .

MATHEWS  OPALA@DESKTOP-P6TLJE2 MINGW64 ~/Desktop/IST Diploma/Practice Git (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   Practice Git.txt


MATHEWS  OPALA@DESKTOP-P6TLJE2 MINGW64 ~/Desktop/IST Diploma/Practice Git (master)
$ git commit -m"first commit"
[master (root-commit) 70e0784] first commit
 1 file changed, 7 insertions(+)
 create mode 100644 Practice Git.txt

MATHEWS  OPALA@DESKTOP-P6TLJE2 MINGW64 ~/Desktop/IST Diploma/Practice Git (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        File 2.txt
        File 3.txt

nothing added to commit but untracked files present (use "git add" to track)

MATHEWS  OPALA@DESKTOP-P6TLJE2 MINGW64 ~/Desktop/IST Diploma/Practice Git (master)
$ git add .

MATHEWS  OPALA@DESKTOP-P6TLJE2 MINGW64 ~/Desktop/IST Diploma/Practice Git (master)
$ git commit -m"comminting again"
[master 8bfd20d] comminting again
 2 files changed, 2 insertions(+)
 create mode 100644 File 2.txt
 create mode 100644 File 3.txt

MATHEWS  OPALA@DESKTOP-P6TLJE2 MINGW64 ~/Desktop/IST Diploma/Practice Git (master)
$ git status
On branch master
nothing to commit, working tree clean

MATHEWS  OPALA@DESKTOP-P6TLJE2 MINGW64 ~/Desktop/IST Diploma/Practice Git (master)
$ git log
commit 8bfd20d22a01e4dcd33a3750d4814c8f7c0b870d (HEAD -> master)
Author: Natasha <natashaonyangoomar@gmail.com>
Date:   Tue Jun 28 12:21:50 2022 +0300

    comminting again

commit 70e07843ec92063d36f752ce73e8c11829e6cc3a
Author: Natasha <natashaonyangoomar@gmail.com>
Date:   Tue Jun 28 12:01:57 2022 +0300

    first commit

MATHEWS  OPALA@DESKTOP-P6TLJE2 MINGW64 ~/Desktop/IST Diploma/Practice Git (master)
$ git help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

MATHEWS  OPALA@DESKTOP-P6TLJE2 MINGW64 ~/Desktop/IST Diploma/Practice Git (master)
$
